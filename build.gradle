plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

allprojects {
	group = 'com.algerage'
	version = projectVersion
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'jacoco'

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter'
		implementation 'org.springframework.boot:spring-boot-starter-test'
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
		implementation 'org.projectlombok:lombok'
		implementation 'org.mapstruct:mapstruct:1.6.3'
		annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
		annotationProcessor 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
		implementation 'com.tngtech.archunit:archunit-junit5:1.3.0'
	}
	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(21)
		}
	}

	repositories {
		mavenCentral()
	}

	tasks.named('test') {
		useJUnitPlatform()
	}


	jacocoTestReport {
		dependsOn test

		reports {
			xml.required.set(true)
			csv.required.set(false)
			html.required.set(true)
		}
	}

	test {
		finalizedBy jacocoTestReport
	}
}



configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

tasks.named('bootJar') {
	enabled = true
}
tasks.named('jar') {
	enabled = false
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

apply from: 'gradle/dockerCompose.gradle'


